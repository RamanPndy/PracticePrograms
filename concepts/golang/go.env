GOPATH: 
This variable specifies the root of your Go workspace. It typically contains three directories: src, pkg, and bin. 
The src directory holds your Go source code, pkg contains package objects, and bin contains executable binaries. 
In recent versions of Go (1.11 and later), GOPATH is often not required if you're using Go modules (GO111MODULE=on), 
as it defaults to using a workspace in your project directory.

GOBIN: 
This variable specifies the directory where compiled binaries are placed when using go install or go build -o. 
If GOBIN is not set, binaries are typically placed in the bin directory of your GOPATH.

GOROOT: 
This variable points to the root directory of the Go installation. It is automatically set during the Go installation process 
and usually does not need to be modified manually.

GOOS and GOARCH: 
These variables specify the target operating system and architecture, respectively, for which Go code is being compiled. 
For example, GOOS=linux and GOARCH=amd64 would target the Linux operating system on an AMD64 architecture.

GO111MODULE: 
This variable controls the behavior of Go modules. 
Setting GO111MODULE=on enables Go modules, which are a dependency management system introduced in Go 1.11. 
When using modules, you typically do not need to set GOPATH.

GOENV: 
This variable specifies the location of a file containing additional environment configurations for Go tools. 
It allows you to customize environment variables for specific projects or setups.

CGO_ENABLED: 
This variable controls whether cgo (the Go tool for calling C code from Go) is enabled. 
Setting CGO_ENABLED=0 disables cgo, which can be useful for pure-Go programs or cross-compilation to different platforms 
where C code is not needed.